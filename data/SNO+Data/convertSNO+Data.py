import math
import numpy as np
import matplotlib.pyplot as plt

#Output file with SNO+ measurements converted to RAT-PAC Form
outfile = open("SNO+Scint.ratdb", "w")

#Raw Properties Arrays from SNO+ Data that needs to be parsed

LIGHT_YIELD = 2000.0

#Time constants measured using Cf-252 in our local test stand
timeConst = [-8.3, -29.9]
timeConstAmp = [0.82, 0.18]
timeConstNeutron = [-9.3, -48.1]
timeConstNeutronAmp = [0.77, 0.23]

#Absorption Length + Rayleigh Scattering Length Data for LAB + PPO + bis-MSB
absLengthWL = [200.0,204.0,208.0,212.0,216.0,220.0,224.0,228.0,232.0,236.0,240.0,244.0,248.0,252.0,256.0,260.0,264.0,268.0,272.0,276.0,280.0,284.0,288.0,292.0,296.0,300.0,304.0,308.0,312.0,316.0,320.0,324.0,328.0,332.0,336.0,340.0,344.0,348.0,352.0,356.0,360.0,364.0,368.0,372.0,376.0,380.0,384.0,388.0,392.0,396.0,400.0,404.0,408.0,412.0,416.0,420.0,424.0,428.0,432.0,436.0,440.0,444.0,448.0,452.0,456.0,460.0,464.0,468.0,472.0,476.0,480.0,484.0,488.0,492.0,496.0,500.0,504.0,508.0,512.0,516.0,520.0,524.0,528.0,532.0,536.0,540.0,544.0,548.0,552.0,556.0,560.0,564.0,568.0,572.0,576.0,580.0,584.0,588.0,592.0,596.0,800.0,]
absLengthLAB = [7.87815e-05, 0.000158718, 0.000150706, 0.000167642, 0.000247367, 0.000677804, 0.00695461, 0.0271749, 0.0364594, 0.036294, 0.02685, 0.017827, 0.0122925, 0.00946247, 0.00811422, 0.00671276, 0.00858868, 0.0102181, 0.059927, 0.177476, 0.639643, 0.914433, 1.00798, 1.06943, 1.30497, 1.74685, 2.47323, 3.78572, 6.84289, 11.107, 14.6668, 20.381, 46.9278, 182.826, 569.121, 1835.07, 3044.01, 3896.98, 4933.4, 6186.52, 7364.7, 8661.42, 9707.39, 12488.3, 15950.2, 17771.9, 20289.6, 21019.0, 27158.0, 33297.0, 39436.0, 45575.0, 51714.0, 57853.0, 63992.0, 70131.0, 76270.0, 82409.0, 88548.0, 94687.0, 100826.0, 106965.0, 113104.0, 119243.0, 125382.0, 131521.0, 137660.0, 143799.0, 149938.0, 156077.0, 162216.0, 168355.0, 174494.0, 180633.0, 186772.0, 192880.0, 170218.0, 119947.0, 134871.0, 106003.0, 118008.0, 109176.0, 142798.0, 189147.0, 102984.0, 69766.2, 68685.3, 71184.7, 79118.8, 114845.0, 192290.0, 179022.0, 206327.0, 139264.0, 79387.3, 53684.0, 46585.6, 47583.3, 48159.0, 53196.7, 53196.7,]
absLengthPPO = [0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.10, 0.08, 0.08, 0.08, 0.08, 0.10, 0.13, 0.16, 0.18, 0.35, 2.67, 14.54, 46.42, 153.48, 615.48, 3161.72, 11648.37, 29581.64, 79147.82, 93991.11, 109496.92, 125691.65, 89736.18, 131206.78, 123521.51, 230805.52, 301136.01, 231729.56, 401878.06, 278144.19, 309747.94, 279570.68, 728541.73, 3095913.02, 510117.89, 426679.58, 1850493.69, 1652157.67, 2985087.36, 693746.67, 4180757.35, 5463284.31, 765928.83, 329421.59, 194373.59, 522505.93, 571240.90, 622653.32, 1614170.10, 333176.48, 472655.80, 296342.65, 1546301.99, 1702251.32, 1581002.71, 262241.69, 263677.05, 211228.28, 255327.25, 327434.98, 284494.18, 584698.18, 1077385.82, 470561.53, 422805.68, 315478.30, 422805.68, 850638.26, 2078453.04, 372815.85, 8712957.16, 2576189.30, 3486620.69, 3298503.54, 5159158.15, 5159158.15, ]
absLengthBisMSB = [ 29.78, 29.78, 29.78, 29.78, 29.78, 29.78, 29.78, 29.78, 29.78, 29.78, 29.78, 29.78, 29.78, 29.78, 29.78, 29.78, 29.78, 29.78, 29.78, 29.78, 29.78, 29.78, 29.78, 29.78, 29.78, 35.27, 23.41, 19.86, 17.03, 14.86, 13.16, 11.78, 10.70, 9.89, 9.37, 9.17, 9.07, 9.09, 9.26, 9.57, 10.31, 11.61, 13.45, 15.96, 19.88, 26.75, 40.94, 74.71, 174.47, 498.86, 1772.19, 6422.35, 19889.38, 54673.77, 159669.88, 810517.44, 2459960.67, 1571299.73, 969517.70, 1479365.82, 1571299.73, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 919339.14, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31, 735471.31,]
rayleighLength = [ 1282.91, 1388.66, 1500.82, 1619.64, 1745.38, 1878.30, 2018.68, 2166.78, 2322.88, 2487.27, 2660.24, 2842.07, 3033.07, 3233.53, 3443.78, 3664.11, 3894.85, 4136.32, 4388.85, 4652.77, 4928.42, 5216.13, 5516.27, 5829.17, 6155.20, 6494.72, 6848.09, 7215.69, 7597.90, 7995.09, 8407.66, 8835.99, 9280.48, 9741.54, 10219.56, 10714.97, 11228.17, 11759.59, 12309.66, 12878.80, 13467.45, 14076.05, 14705.05, 15354.90, 16026.05, 16718.97, 17434.12, 18171.98, 18933.00, 19717.69, 20526.51, 21359.97, 22218.56, 23102.77, 24013.12, 24950.11, 25914.25, 26906.07, 27926.10, 28974.85, 30052.87, 31160.69, 32298.87, 33467.94, 34668.47, 35901.00, 37166.12, 38464.37, 39796.35, 41162.62, 42563.78, 44000.41, 45473.10, 46982.45, 48529.07, 50113.56, 51736.54, 53398.63, 55100.44, 56842.62, 58625.78, 60450.57, 62317.63, 64227.61, 66181.16, 68178.95, 70221.62, 72309.85, 74444.32, 76625.69, 78854.66, 81131.90, 83458.12, 85834.00, 88260.26, 90737.59, 93266.71, 95848.33, 98483.18, 101171.99, 101171.99, ]
scalingLAB = 1.0
scalingPPO = 1.0
scalingBisMSB = 2.3
scalingRayleigh = 1.176

#Convert absorption/Rayleigh data to effective attenuation length
#Also compute the fraction of photons that will scatter vs. absorb as a function of wavelength
attLength = []
opScatFrac = []
for i in range(len(absLengthWL)):
    attLength.append(1.0/(scalingLAB/absLengthLAB[i] + scalingPPO/absLengthPPO[i] + scalingBisMSB/absLengthBisMSB[i] + scalingRayleigh/rayleighLength[i]))
    opScatFrac.append(attLength[i]/rayleighLength[i])

#Refractive Index Data
rIndexWL = [200.0, 213.0, 215.0, 217.0, 219.0, 221.0, 223.0, 225.0, 227.0, 229.0, 231.0, 233.0, 235.0, 237.0, 239.0, 241.0, 243.0, 245.0, 247.0, 249.0, 251.0, 253.0, 255.0, 257.0, 259.0, 261.0, 263.0, 265.0, 267.0, 269.0, 271.0, 273.0, 275.0, 277.0, 279.0, 281.0, 283.0, 285.0, 287.0, 289.0, 291.0, 293.0, 295.0, 297.0, 299.0, 301.0, 303.0, 305.0, 307.0, 309.0, 311.0, 313.0, 315.0, 317.0, 319.0, 321.0, 323.0, 325.0, 327.0, 329.0, 331.0, 333.0, 335.0, 337.0, 339.0, 341.0, 343.0, 345.0, 347.0, 349.0, 351.0, 353.0, 355.0, 357.0, 359.0, 361.0, 363.0, 365.0, 367.0, 369.0, 371.0, 373.0, 375.0, 377.0, 379.0, 381.0, 383.0, 385.0, 387.0, 389.0, 391.0, 393.0, 395.0, 397.0, 399.0, 401.0, 403.0, 405.0, 407.0, 409.0, 411.0, 413.0, 415.0, 417.0, 419.0, 421.0, 423.0, 425.0, 427.0, 429.0, 431.0, 433.0, 435.0, 437.0, 439.0, 441.0, 443.0, 445.0, 447.0, 449.0, 451.0, 453.0, 455.0, 457.0, 459.0, 461.0, 463.0, 465.0, 467.0, 469.0, 471.0, 473.0, 475.0, 477.0, 479.0, 481.0, 483.0, 485.0, 487.0, 489.0, 491.0, 493.0, 495.0, 497.0, 499.0, 501.0, 503.0, 505.0, 507.0, 509.0, 511.0, 513.0, 515.0, 517.0, 519.0, 521.0, 523.0, 525.0, 527.0, 529.0, 531.0, 533.0, 535.0, 537.0, 539.0, 541.0, 543.0, 545.0, 547.0, 549.0, 551.0, 553.0, 555.0, 557.0, 559.0, 561.0, 563.0, 565.0, 567.0, 569.0, 571.0, 573.0, 575.0, 577.0, 579.0, 581.0, 583.0, 585.0, 587.0, 589.0, 591.0, 593.0, 595.0, 597.0, 599.0, 601.0, 603.0, 605.0, 607.0, 609.0, 611.0, 613.0, 615.0, 617.0, 619.0, 621.0, 623.0, 625.0, 627.0, 629.0, 631.0, 633.0, 635.0, 637.0, 639.0, 641.0, 643.0, 645.0, 647.0, 649.0, 651.0, 653.0, 655.0, 657.0, 659.0, 661.0, 663.0, 665.0, 667.0, 669.0, 671.0, 673.0, 675.0, 677.0, 679.0, 681.0, 683.0, 685.0, 687.0, 689.0, 691.0, 693.0, 695.0, 697.0, 699.0, 701.0, 703.0, 705.0, 707.0, 709.0, 711.0, 713.0, 715.0, 717.0, 719.0, 721.0, 723.0, 725.0, 727.0, 729.0, 731.0, 733.0, 735.0, 737.0, 739.0, 741.0, 743.0, 745.0, 747.0, 749.0, 751.0, 753.0, 755.0, 757.0, 759.0, 761.0, 763.0, 765.0, 767.0, 769.0, 771.0, 773.0, 775.0, 777.0, 779.0, 781.0, 783.0, 785.0, 787.0, 789.0, 791.0, 793.0, 795.0, 797.0, 799.0, 800.0,]
rIndex = [1.75541, 1.75541, 1.75541, 1.7526, 1.74552, 1.73503, 1.72202, 1.70736, 1.69194, 1.67662, 1.66228, 1.65227, 1.64307, 1.63526, 1.62846, 1.62243, 1.61699, 1.61204, 1.60748, 1.60326, 1.59933, 1.59565, 1.59218, 1.58892, 1.58582, 1.58288, 1.58009, 1.57742, 1.57488, 1.57244, 1.57011, 1.56787, 1.56571, 1.56365, 1.56165, 1.55973, 1.55788, 1.55609, 1.55437, 1.5527, 1.55108, 1.54952, 1.548, 1.54654, 1.54511, 1.54373, 1.54239, 1.54109, 1.53982, 1.53859, 1.5374, 1.53623, 1.5351, 1.534, 1.53293, 1.53188, 1.53086, 1.52987, 1.5289, 1.52795, 1.52703, 1.52613, 1.52525, 1.52439, 1.52355, 1.52273, 1.52193, 1.52115, 1.52039, 1.51964, 1.51891, 1.51819, 1.51749, 1.5168, 1.51613, 1.51547, 1.51483, 1.5142, 1.51358, 1.51297, 1.51238, 1.5118, 1.51122, 1.51066, 1.51012, 1.50958, 1.50905, 1.50853, 1.50802, 1.50752, 1.50703, 1.50655, 1.50608, 1.50561, 1.50516, 1.50471, 1.50427, 1.50383, 1.50341, 1.50299, 1.50258, 1.50218, 1.50178, 1.50139, 1.501, 1.50063, 1.50025, 1.49989, 1.49953, 1.49918, 1.49883, 1.49848, 1.49815, 1.49781, 1.49749, 1.49717, 1.49685, 1.49654, 1.49623, 1.49593, 1.49563, 1.49533, 1.49504, 1.49476, 1.49448, 1.4942, 1.49392, 1.49366, 1.49339, 1.49313, 1.49287, 1.49261, 1.49236, 1.49212, 1.49187, 1.49163, 1.49139, 1.49116, 1.49093, 1.4907, 1.49047, 1.49025, 1.49003, 1.48982, 1.4896, 1.48939, 1.48918, 1.48898, 1.48877, 1.48857, 1.48838, 1.48818, 1.48799, 1.4878, 1.48761, 1.48742, 1.48724, 1.48706, 1.48688, 1.4867, 1.48653, 1.48635, 1.48618, 1.48601, 1.48585, 1.48568, 1.48552, 1.48536, 1.4852, 1.48504, 1.48488, 1.48473, 1.48458, 1.48443, 1.48428, 1.48413, 1.48398, 1.48384, 1.4837, 1.48356, 1.48342, 1.48328, 1.48314, 1.48301, 1.48287, 1.48274, 1.48261, 1.48248, 1.48235, 1.48223, 1.4821, 1.48198, 1.48185, 1.48173, 1.48161, 1.48149, 1.48137, 1.48126, 1.48114, 1.48103, 1.48091, 1.4808, 1.48069, 1.48058, 1.48047, 1.48036, 1.48025, 1.48015, 1.48004, 1.47994, 1.47984, 1.47973, 1.47963, 1.47953, 1.47943, 1.47933, 1.47924, 1.47914, 1.47904, 1.47895, 1.47885, 1.47876, 1.47867, 1.47858, 1.47849, 1.4784, 1.47831, 1.47822, 1.47813, 1.47804, 1.47796, 1.47787, 1.47779, 1.4777, 1.47762, 1.47754, 1.47745, 1.47737, 1.47729, 1.47721, 1.47713, 1.47705, 1.47698, 1.4769, 1.47682, 1.47675, 1.47667, 1.4766, 1.47652, 1.47645, 1.47637, 1.4763, 1.47623, 1.47616, 1.47609, 1.47602, 1.47595, 1.47588, 1.47581, 1.47574, 1.47567, 1.4756, 1.47554, 1.47547, 1.4754, 1.47534, 1.47527, 1.47521, 1.47515, 1.47508, 1.47502, 1.47496, 1.47489, 1.47483, 1.47477, 1.47471, 1.47465, 1.47459, 1.47453, 1.47447, 1.47441, 1.47435, 1.47429, 1.47424, 1.47418, 1.47412, 1.47407, 1.47401, 1.47395, 1.4739, 1.47384, 1.47379, 1.47373, 1.47368, 1.47363, 1.47360, ]

#Scintillation Spectrum Data
scintWL = [200.0, 203.0, 205.0, 207.0, 209.0, 211.0, 213.0, 215.0, 217.0, 219.0, 221.0, 223.0, 225.0, 227.0, 229.0, 231.0, 233.0, 235.0, 237.0, 239.0, 241.0, 243.0, 245.0, 247.0, 249.0, 251.0, 253.0, 255.0, 257.0, 259.0, 261.0, 263.0, 265.0, 267.0, 269.0, 271.0, 273.0, 275.0, 277.0, 279.0, 281.0, 283.0, 285.0, 287.0, 289.0, 291.0, 293.0, 295.0, 297.0, 299.0, 301.0, 303.0, 305.0, 307.0, 309.0, 311.0, 313.0, 315.0, 317.0, 319.0, 321.0, 323.0, 325.0, 327.0, 329.0, 331.0, 333.0, 335.0, 337.0, 339.0, 341.0, 343.0, 345.0, 347.0, 349.0, 351.0, 353.0, 355.0, 357.0, 359.0, 361.0, 363.0, 365.0, 367.0, 369.0, 371.0, 373.0, 375.0, 377.0, 379.0, 381.0, 383.0, 385.0, 387.0, 389.0, 391.0, 393.0, 395.0, 397.0, 399.0, 401.0, 403.0, 405.0, 407.0, 409.0, 411.0, 413.0, 415.0, 417.0, 419.0, 421.0, 423.0, 425.0, 427.0, 429.0, 431.0, 433.0, 435.0, 437.0, 439.0, 441.0, 443.0, 445.0, 447.0, 449.0, 451.0, 453.0, 455.0, 457.0, 459.0, 461.0, 463.0, 465.0, 467.0, 469.0, 471.0, 473.0, 475.0, 477.0, 479.0, 481.0, 483.0, 485.0, 487.0, 489.0, 491.0, 493.0, 495.0, 497.0, 499.0, 501.0, 503.0, 505.0, 507.0, 509.0, 511.0, 513.0, 515.0, 517.0, 519.0, 521.0, 523.0, 525.0, 527.0, 529.0, 531.0, 533.0, 535.0, 537.0, 539.0, 541.0, 543.0, 545.0, 547.0, 549.0, 551.0, 553.0, 555.0, 557.0, 559.0, 561.0, 563.0, 565.0, 567.0, 569.0, 571.0, 573.0, 575.0, 577.0, 579.0, 581.0, 583.0, 585.0, 587.0, 589.0, 591.0, 593.0, 595.0, 597.0, 599.0, 800.0, ]
scintPPO = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.3325e-05, 2.5735e-05, 2.774e-05, 4.345e-05, 6.395e-05, 3.86e-05, 2.735e-05, 2.53e-05, 2.98e-05, 3.375e-05, 3.22e-05, 3.295e-05, 4.1e-05, 3.865e-05, 6.52e-05, 7.65e-05, 0.000134, 0.0022, 0.00484, 0.0088, 0.011, 0.01276, 0.01408, 0.0132, 0.01364, 0.01408, 0.01628, 0.01892, 0.02068, 0.02244, 0.02112, 0.0198, 0.01848, 0.01672, 0.01584, 0.01628, 0.01672, 0.01672, 0.01672, 0.01584, 0.01385, 0.0125, 0.0114, 0.0108, 0.0104, 0.01, 0.0095, 0.00905, 0.00855, 0.00785, 0.00725, 0.0065, 0.00595, 0.00535, 0.00485, 0.0046, 0.0042, 0.0039, 0.00365, 0.0034, 0.0031, 0.00295, 0.0027, 0.00235, 0.0022, 0.002, 0.0018, 0.00165, 0.00145, 0.00135, 0.00125, 0.00115, 0.001, 0.00095, 0.0009, 0.00075, 0.00075, 0.00065, 0.0006, 0.00055, 0.00045, 0.00045, 0.0004, 0.00035, 0.00035, 0.00025, 0.0003, 0.00025, 0.0002, 0.0002, 0.0002, 0.00015, 0.00015, 0.00015, 0.00015, 0.0001, 0.0001, 0.0001, 0.0001, 5e-05, 0.0001, 5e-05, 5e-05, 5e-05, 5e-05, 5e-05, 5e-05, 5e-05, 5e-05, 0.0, 5e-05, 5e-05, 0.0, 5e-05, 0.0, 5e-05, 0.0, 5e-05, 0.0, 0.0, 5e-05, 0.0, 0.0, 5e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ]
scintBisMSB = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 450.0, 525.0, 385.0, 600.0, 300.0, 626.0, 699.5, 224.5, 331.5, 484.0, 428.5, 251.0, 350.0, 299.5, 295.0, 286.0, 350.0, 295.5, 263.5, 537.5, 2077.5, 2590.0, 2725.0, 2405.0, 2695.0, 2775.0, 2545.0, 3470.0, 3795.0, 5135.0, 7955.0, 13450.0, 23400.0, 40800.0, 70350.0, 119500.0, 198500.0, 314500.0, 478500.0, 694000.0, 933500.0, 1.215e+06, 1.505e+06, 1.74e+06, 1.895e+06, 1.93e+06, 1.9e+06, 1.81e+06, 1.71e+06, 1.64e+06, 1.645e+06, 1.695e+06, 1.795e+06, 1.95e+06, 2.08e+06, 2.16e+06, 2.205e+06, 2.195e+06, 2.12e+06, 1.99e+06, 1.855e+06, 1.72e+06, 1.565e+06, 1.445e+06, 1.34e+06, 1.275e+06, 1.23e+06, 1.2e+06, 1.18e+06, 1.16e+06, 1.125e+06, 1.09e+06, 1.045e+06, 988500.0, 911500.0, 841500.0, 765000.0, 701000.0, 634000.0, 592000.0, 547500.0, 509500.0, 480000.0, 455500.0, 428000.0, 408500.0, 384000.0, 364500.0, 344500.0, 317000.0, 296500.0, 278500.0, 255500.0, 233000.0, 204500.0, 190500.0, 174500.0, 161500.0, 151000.0, 139000.0, 130000.0, 122500.0, 116000.0, 107500.0, 99900.0, 92100.0, 86000.0, 81450.0, 74550.0, 69650.0, 64450.0, 59650.0, 55150.0, 49650.0, 46700.0, 40650.0, 39050.0, 34350.0, 32250.0, 30100.0, 27550.0, 25800.0, 24550.0, 22200.0, 20650.0, 19100.0, 18500.0, 16500.0, 14650.0, 13950.0, 13450.0, 13100.0, 11250.0, 10445.0, 9500.0, 9160.0, 8320.0, 8065.0, 7835.0, 7050.0, 6535.0, 6270.0, 5395.0, 5070.0, 4590.0, 0.0,]

#Normalize scintillation spectra to light yield to get proton light yield right
integralPPO = 0
integralBisMSB = 0
for i in range(len(scintWL) - 1):
    #Use average of left and right integrals
    integralPPO += 0.5*(scintPPO[i] + scintPPO[i+1])*(scintWL[i+1] - scintWL[i])
    integralBisMSB += 0.5*(scintBisMSB[i] + scintBisMSB[i+1])*(scintWL[i+1] - scintWL[i])

#Do the normalization
for i in range(len(scintWL)):
    scintPPO[i] *= LIGHT_YIELD/integralPPO
    scintBisMSB[i] *= LIGHT_YIELD/integralBisMSB

#Redo the integration to make sure the integrals come out to the light yield
integralPPO = 0
integralBisMSB = 0
for i in range(len(scintWL) - 1):
    #Use average of left and right integrals
    integralPPO += 0.5*(scintPPO[i] + scintPPO[i+1])*(scintWL[i+1] - scintWL[i])
    integralBisMSB += 0.5*(scintBisMSB[i] + scintBisMSB[i+1])*(scintWL[i+1] - scintWL[i])

print "PPO Integral: ", integralPPO
print "Bis-MSB Integral: ", integralBisMSB

#Constant Reemission probability over all wavelengths. Assume the reemission probability
#for bis-MSB since it is doing the reemission in our model.
reemissionWL = [200.0, 800.0]
reemissionProb = [0.96, 0.96]

outfile.write("""{
name: "OPTICS",
index: "LABPPOBisMSBScint",
valid_begin: [0, 0],
valid_end: [0, 0],

//Light Yield for deoxygenated LAB+PPO
""")
outfile.write("LIGHT_YIELD: " + str(LIGHT_YIELD) +",\n\n")

outfile.write("// Scintillation timing\n")
outfile.write("SCINTWAVEFORM_value1: " + str(timeConst) + ",\n")
outfile.write("SCINTWAVEFORM_value2: " + str(timeConstAmp) + ",\n")
outfile.write("SCINTWAVEFORMneutron_value1: " + str(timeConstNeutron) + ",\n")
outfile.write("SCINTWAVEFORMneutron_value2: " + str(timeConstNeutronAmp) + ",\n")

outfile.write("""\n// Quenching
SCINTMOD_value1: [1.0, ],
SCINTMOD_value2: [0.0798, ],
SCINTMODalpha_value1: [1.0, ],
SCINTMODalpha_value2: [0.076, ],
SCINTMODneutron_value1: [1.0, ],
SCINTMODneutron_value2: [0.093, ],

//SCINTILLATION = PPO Emission, SCINTILLATION_WLS = bis-MSB Emission
SCINTILLATION_option: "dy_dwavelength",
""")

outfile.write("SCINTILLATION_value1: " + str(scintWL) + ",\n")
outfile.write("SCINTILLATION_value2: " + str(scintPPO) + ",\n")
outfile.write('SCINTILLATION_WLS_option: "dy_dwavelength",\n')
outfile.write("SCINTILLATION_WLS_value1: " + str(scintWL) + ",\n")
outfile.write("SCINTILLATION_WLS_value2: " + str(scintBisMSB) + ",\n")

outfile.write('\nRINDEX_option: "wavelength",\n')
outfile.write("RINDEX_value1: " + str(rIndexWL) + ",\n")
outfile.write("RINDEX_value2: " + str(rIndex) + ",\n")

outfile.write("""\n// Absorption measurements
ABSLENGTH_option: "wavelength",\n""")
outfile.write("ABSLENGTH_value1: " + str(absLengthWL) + ",\n")
outfile.write("ABSLENGTH_value2: " + str(attLength) + ",\n")

outfile.write("""\n// Optical Scattering Fraction = Probability that Attenuated Photon Scatters vs. Absorbs
OPSCATFRAC_option: "wavelength",\n""")
outfile.write("OPSCATFRAC_value1: " + str(absLengthWL) + ",\n")
outfile.write("OPSCATFRAC_value2: " + str(opScatFrac) + ",\n")

outfile.write("""\n// Re-emission probability; assumed to be that of bis-MSB
REEMISSION_PROB_option: "wavelength",\n""")
outfile.write("REEMISSION_PROB_value1: " + str(reemissionWL) + ",\n")
outfile.write("REEMISSION_PROB_value2: " + str(reemissionProb) + ",\n")

outfile.write("""
PROPERTY_LIST: ["LIGHT_YIELD", "SCINTWAVEFORM", "SCINTWAVEFORMneutron", "SCINTMOD", "SCINTMODalpha", "SCINTMODneutron", "RINDEX", "SCINTILLATION", "SCINTILLATION_WLS", "ABSLENGTH", "OPTSCATFRAC", "REEMISSION_PROB"]
}
""")

outfile.close()

#Done writing to file, now let's make some plots
fig, ax = plt.subplots()
ax.plot(absLengthWL, np.array(absLengthLAB)/1000., 'r', label="LAB", linewidth=2.0)
ax.plot(absLengthWL, np.array(absLengthPPO)/1000., 'b', label="PPO", linewidth=2.0)
ax.plot(absLengthWL, np.array(absLengthBisMSB)/1000., 'g', label="bis-MSB", linewidth=2.0)
ax.plot(absLengthWL, np.array(rayleighLength)/1000., 'm', label="Rayleigh", linewidth=2.0)
ax.plot(absLengthWL, np.array(attLength)/1000., 'k', label="Attenuation Length", linewidth=2.0)
ax.tick_params(labelsize=16)
plt.title('Scattering/Absorption Lengths', fontsize=20)
plt.xlabel('Wavelength', fontsize=20)
plt.ylabel('Length (m)', fontsize=20)
plt.yscale('log')
plt.grid(True)
legend = ax.legend(loc='lower right', fontsize=16)
plt.savefig("lengths.pdf", bbox_inches='tight')
#plt.show()

plt.clf()
fig, ax = plt.subplots()
ax.plot(rIndexWL, rIndex, 'k', label="Refractive Index", linewidth=2.0)
ax.tick_params(labelsize=16)
plt.title('Refractive Index', fontsize=20)
plt.xlabel('Wavelength', fontsize=20)
plt.ylabel('Refractive Index', fontsize=20)
plt.grid(True)
plt.savefig("rIndex.pdf", bbox_inches='tight')
#plt.show()

plt.clf()
fig, ax = plt.subplots()
scintPPO = np.array(scintPPO)
scintBisMSB = np.array(scintBisMSB)
ax.plot(scintWL, scintPPO/(2.0*np.sum(scintPPO)), 'r', label="PPO", linewidth=2.0)
ax.plot(scintWL, scintBisMSB/(2.0*np.sum(scintBisMSB)), 'b', label="bis-MSB", linewidth=2.0)
ax.tick_params(labelsize=16)
plt.title('Emission Spectra', fontsize=20)
plt.xlabel('Wavelength', fontsize=20)
plt.grid(True)
legend = ax.legend(loc='upper right', fontsize=20)
plt.savefig("spectra.pdf", bbox_inches='tight')
#plt.show()

plt.clf()
fig, ax = plt.subplots()
ax.plot(absLengthWL, opScatFrac, 'k', label="Optical Scattering Fraction", linewidth=2.0)
ax.tick_params(labelsize=16)
plt.title('Optical Scattering Fraction', fontsize=20)
plt.xlabel('Wavelength', fontsize=20)
plt.ylabel('Optical Scattering Fraction', fontsize=20)
plt.grid(True)
plt.savefig("optScatFrac.pdf", bbox_inches='tight')
#plt.show()
